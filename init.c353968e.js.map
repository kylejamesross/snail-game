{"version":3,"sources":["ts/ui.ts","ts/constants.ts","ts/gameStates.ts","ts/gameState.ts","ts/buttons.ts","ts/init.ts"],"names":[],"mappings":";;;;;AEAA,IAAK,SAAL;AEAA,AHAa,MGAb,CHAa,CAAA,SGAb,AHAa,GGAb,AHAyB,IAAZ,GGAb,CAAA,aAAA,CAAA;AHCa,ACDb,AFAA,CEAA,MDCa,CAAA,CDDG,EEAX,EDCQ,EDDb,CCCqB,ADDE,CCCD,GCDtB,CFAA,CEAc,CDCO,ADDe,ECCN,MAAT,EAAiB,SAAjB,CAAR;AGCb,AHAa,ACDX,AFAA,EEAA,IECI,CHAO,CAAA,ADDL,GEAN,CAAA,GFAa,GAAG,CCCL,ECDX,CDCyB,ACDzB,CECqB,EHAV,CGAa,AJDA,CICC,AJDA,CEAzB,CAAA,EECwB,CFDxB,CECuC,AFDvC,CAAA,GECwB,AFDxB,GFAgB,CAAoC,CICI,CFDxD,IFAgB,CAAhB;AIEA,AHAW,ACDX,EAAA,KDCW,CGAL,AHAK,GCDX,CAAA,EDCW,CGAE,EHAO,CGAJ,AHAK,GCDrB,CAAA,CDCoB,EAAQ,CGAJ,CAAC,IHAL,CAAT,ACDX,CAAA,GAAA,CAAA,CAAA,EECgB,CAAoC,AFDpD,IECwD,MFDxD,KECwD,CAAA,KAAA,CAAM,IAAN,CAAW,OAAnD,CAAhB;AHCW,ACDX,AFDA,EECA,IFDI,CCEO,CAAA,GCDX,CAAA,CFDA,EAAa,GCEF,GAAa,ACDxB,CAAA,CDCW,OCDX,CAAA,GAAA,CAAA,CAAA,GAAA,QAAA;AECA,AHCW,ACDX,AFDE,EECF,EFDE,EICE,CHCO,CAAA,GCDX,AFDS,CECT,AFDU,CICV,EAAa,KHCF,CCDX,AFDE,CECF,CDC0B,CAAf,ADFW,KECtB,CAAA,GAAA,CAAA,CAAA,AFDiC,GECjC,EFDsC,EAApC,GECF;AECE,AFAF,AFDC,EECD,QEAQ,CFAR,CAAA,OEAiB,EFAjB,CEAoB,AFApB,OEA2B,CAAC,CFA5B,CAAA,GAAA,CAAA,CAAA,EEAE,CFAF,SAAA;AECE,AHCS,AEPb,ADME,AFDD,EECC,EEAE,EDNJ,CFOa,CAAA,EEPb,CDME,CAAA,CEAW,ADNb,CCMc,MAAV,ADNJ,CCMqB,ADNrB,ADME,CAAA,GDCW,EEPb,CFOkC,AEPlC,KFOiC,CGD7B,CFAF,CEAkC,AFAlC,CDEA,ECFA,CEAE,AFAF,CDEI,ACFJ,CDEK,ECFL,GDEA,CAAW,IAAI,CAAC,ICFhB,EDEW,KAAgB,CAA3B,IAAgC,CAAhC,GAAoC,KADzB;AGAV,AFAD,EAAA,SAAA,CAAA,SAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAA;AECD,AHEY,AETb,ADOE,AFRF,CIEA,CFME,ICPF,CFSa,ADVb,CCUa,ADVb,GEQE,CAAA,EFRF,GGCA,AHDA,GGCA,CDOE,CDEW,ACFX,CFRF,ECU+B,EET/B,CAAA,ADOE,CAAA,CDE4B,ECF5B,CAAA,CDGA,ACHA,GAAA,CDGI,CAAC,EEVP,CAAA,CDOE,CDGA,CAAW,IAAI,CAAC,MAAL,KAAgB,CAA3B,IAAgC,CAAhC,GAAoC,KADzB;ACDX,EAAA,SAAA,CAAA,SAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAA;AECF,AHGa,AEHb,ADAC,AFHD,CEPA,EAAK,GCUL,CFGa,CAAA,CGHW,AJHR,GEPF,KAAT,CCUL,AHHA,CAA0B,CIG1B,CAAoC,ADApC,EFGa,CDNb,ECMgC,ACblB,AFOyB,GEPzB,EDaiB,ACbjB,CAAd,GDcE,CEJF,CCAA,ADAA,ECA4E,AHItE,CAAC,IEJP,CFIE,AEJF,CFIa,IAAI,CAAC,MAAL,EEJb,CAAA,CAAA,CFI6B,CAA3B,IAAgC,CAAhC,GAAoC,KADzB;AGFX,AJHA,MIGI,EJHE,OAAO,GIGG,AJHA,GIGG,CAAnB,IJHwB,CAAC,aAAT,CAAoC,OAApC,CAAhB;AGIF,ADAA,MCAM,CDAN,CAAA,OCAe,ADAf,GCAkB,ADAH,SAAf;AECE,ADAA,AHJA,EGIA,IHJI,GGIG,ECAE,ADAA,EHJT,EAAa,OIIb,CAAqB,ADAZ,CAAA,OAAA,CAAU,IADH;ACCO,ADCvB,AHJE,EGIF,ECDuB,AJHrB,GGIG,EAAE,CAFS,CHFP,CAAC,SAAR,GAAoB,QAAQ,KAAK,EAAjC;AIGmB,ADErB,AHJC,EGID,CCFA,EAAsC,KDE9B,EAAE,CAAC,CAHK;ACEd,ADEF,AHJD,EGIC,MCFM,GDEG,EAAE,CCFC,ADEA,CAJI,WCEQ,OAAtB,EAA+B;AAC7B,ADEJ,EAAA,QCFQ,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","file":"init.c353968e.js","sourceRoot":"..\\src","sourcesContent":["export function modFox(state: string) {\n  const element = document.querySelector<HTMLElement>(\".fox\");\n  if (element) {\n    element.className = `fox fox-${state}`;\n  }\n}\n\nexport function modeScene(state: string) {\n  const element = document.querySelector<HTMLElement>(\".game\");\n  if (element) {\n    element.className = `game ${state}`;\n  }\n}\n\nexport function togglePoopBag(show: boolean) {\n  const element = document.querySelector<HTMLElement>(\".poop-bag\");\n  if (element) {\n    element.classList.toggle(\"hidden\", !show);\n  }\n}\n\nexport function writeModal(text = \"\") {\n  const element = document.querySelector<HTMLElement>(\".modal\");\n  if (element) {\n    element.innerHTML = `<div class=\"modal-inner\">${text}</div>`;\n  }\n}\n","export const TICK_RATE = 3000;\nexport const ICONS = [\"fish\", \"poop\", \"weather\"];\nexport const RAIN_CHANCE = 0.2;\nexport const SCENES = [\"day\", \"rain\"];\nexport const DAY_LENGTH = 60;\nexport const NIGHT_LENGTH = 3;\n\nexport const getNextHungerTime = (clock: number): number =>\n  Math.floor(Math.random() * 3) + 8 + clock;\n\nexport const getNextDieTime = (clock: number): number =>\n  Math.floor(Math.random() * 2) + 3 + clock;\n\nexport const getNextPoopTime = (clock: number): number =>\n  Math.floor(Math.random() * 3) + 8 + clock;\n","enum GameState {\n  INIT = 0,\n  HATCHING = 1,\n  IDLING = 3,\n  SLEEP = 4,\n  FEEDING = 5,\n  CELEBRATING = 6,\n  POOPING = 7,\n  DEAD = 8,\n  HUNGRY = 9,\n}\n\nexport default GameState;\n","import { modFox, modeScene, togglePoopBag, writeModal } from \"./ui\";\nimport {\n  RAIN_CHANCE,\n  SCENES,\n  DAY_LENGTH,\n  NIGHT_LENGTH,\n  getNextDieTime,\n  getNextHungerTime,\n  getNextPoopTime,\n} from \"./constants\";\nimport GameState from \"./gameStates\";\n\nconst gameState = {\n  current: GameState.INIT,\n  clock: 1,\n  wakeTime: -1,\n  sleepTime: -1,\n  hungryTime: -1,\n  dieTime: -1,\n  poopTime: -1,\n  timeToStartCelebrating: -1,\n  timeToEndCelebrating: -1,\n  scene: 0,\n  tick() {\n    this.clock++;\n\n    switch (this.clock) {\n      case this.sleepTime:\n        this.wake();\n        break;\n      case this.hungryTime:\n        this.sleep();\n        break;\n      case this.dieTime:\n        this.die();\n        break;\n      case this.timeToStartCelebrating:\n        this.startCelebrating();\n        break;\n      case this.timeToEndCelebrating:\n        this.endCelebrating();\n        break;\n      case this.poopTime:\n        this.poop();\n    }\n  },\n  startGame() {\n    this.current = GameState.HATCHING;\n    this.wakeTime = this.clock + 3;\n    modFox(\"egg\");\n    modeScene(\"day\");\n    writeModal();\n  },\n  wake() {\n    this.current = GameState.IDLING;\n    this.wakeTime = -1;\n    modFox(\"idling\");\n    this.scene = Math.random() > RAIN_CHANCE ? 0 : 1;\n    modeScene(SCENES[this.scene]);\n    this.determineFoxState();\n    this.sleepTime = this.clock + DAY_LENGTH;\n    this.hungryTime = getNextHungerTime(this.clock);\n  },\n  handleUserAction(icon: string) {\n    if (\n      [\n        GameState.SLEEP,\n        GameState.FEEDING,\n        GameState.CELEBRATING,\n        GameState.HATCHING,\n      ].includes(this.current)\n    ) {\n      return;\n    }\n\n    if (this.current === GameState.INIT || this.current === GameState.DEAD) {\n      this.startGame();\n      return;\n    }\n\n    switch (icon) {\n      case \"weather\":\n        this.changeWeather();\n        break;\n      case \"poop\":\n        this.cleanUpPoop();\n        break;\n      case \"fish\":\n        this.feed();\n        break;\n      default:\n        break;\n    }\n  },\n  changeWeather() {\n    this.scene = (this.scene + 1) % SCENES.length;\n    modeScene(SCENES[this.scene]);\n    this.determineFoxState();\n  },\n  cleanUpPoop() {\n    if (this.current === GameState.POOPING) {\n      this.dieTime = -1;\n      togglePoopBag(true);\n      this.startCelebrating();\n      this.hungryTime = getNextHungerTime(this.clock);\n    }\n  },\n  poop() {\n    this.current = GameState.POOPING;\n    this.poopTime = -1;\n    this.dieTime = getNextDieTime(this.clock);\n    modFox(\"pooping\");\n  },\n  sleep() {\n    this.current = GameState.SLEEP;\n    modFox(\"sleep\");\n    modeScene(\"night\");\n    this.clearTimes();\n    this.wakeTime = this.clock + NIGHT_LENGTH;\n  },\n  getHungry() {\n    this.current = GameState.HUNGRY;\n    this.dieTime = getNextDieTime(this.clock);\n    this.hungryTime = -1;\n    modFox(\"hungry\");\n  },\n  die() {\n    this.current = GameState.DEAD;\n    modeScene(\"dead\");\n    modFox(\"dead\");\n    this.clearTimes();\n    writeModal(\"The fox died :( <br/> Press the middle button to start\");\n  },\n  startCelebrating() {\n    this.current = GameState.CELEBRATING;\n    modFox(\"celebrate\");\n    this.timeToStartCelebrating = -1;\n    this.timeToEndCelebrating = this.clock + 2;\n  },\n  endCelebrating() {\n    this.timeToStartCelebrating = -1;\n    this.current = GameState.IDLING;\n    this.determineFoxState();\n    togglePoopBag(false);\n  },\n  determineFoxState() {\n    if (this.current === GameState.IDLING) {\n      if (SCENES[this.scene] === \"rain\") {\n        modFox(\"rain\");\n      } else {\n        modFox(\"idling\");\n      }\n    }\n  },\n  feed() {\n    if (this.current !== GameState.HUNGRY) {\n      return;\n    }\n    this.current = GameState.FEEDING;\n    this.dieTime = -1;\n    this.poopTime = getNextPoopTime(this.clock);\n    modFox(\"eating\");\n    this.timeToStartCelebrating = this.clock + 2;\n  },\n  clearTimes() {\n    this.wakeTime = -1;\n    this.sleepTime = -1;\n    this.hungryTime = -1;\n    this.dieTime = -1;\n    this.poopTime = -1;\n    this.timeToStartCelebrating = -1;\n    this.timeToEndCelebrating = -1;\n  },\n};\n\nexport const handleUserAction = gameState.handleUserAction.bind(gameState);\n\nexport default gameState;\n","import { ICONS } from \"./constants\";\n\nconst toggleHighlighted = (icon: number, show: boolean) => {\n  const element = document.querySelector<HTMLElement>(`.${ICONS[icon]}-icon`);\n  if (element) {\n    const classList = element.classList;\n    classList.toggle(\"highlighted\", show);\n  }\n};\n\nexport default function initButtons(handleUserAction: (icon: string) => void) {\n  let selectedIcon = 0;\n\n  function buttonClick({ target }: Event) {\n    if (target instanceof Element) {\n      if (target.classList.contains(\"left-btn\")) {\n        toggleHighlighted(selectedIcon, false);\n        selectedIcon = (2 + selectedIcon) % ICONS.length;\n        toggleHighlighted(selectedIcon, true);\n      } else if (target.classList.contains(\"right-btn\")) {\n        toggleHighlighted(selectedIcon, false);\n        selectedIcon = (1 + selectedIcon) % ICONS.length;\n        toggleHighlighted(selectedIcon, true);\n      } else {\n        handleUserAction(ICONS[selectedIcon]);\n      }\n    }\n  }\n\n  const buttonElement = document!.querySelector(\".buttons\");\n\n  if (buttonElement) {\n    buttonElement.addEventListener(\"click\", buttonClick);\n  }\n}\n","import game, { handleUserAction } from \"./gameState\";\nimport { TICK_RATE } from \"./constants\";\nimport initButtons from \"./buttons\";\n\n(async function init() {\n  initButtons(handleUserAction);\n\n  let nextTimeToTick = Date.now();\n\n  function nextAnimationFrame() {\n    const now = Date.now();\n    if (nextTimeToTick <= now) {\n      game.tick();\n      nextTimeToTick = now + TICK_RATE;\n    }\n\n    requestAnimationFrame(nextAnimationFrame);\n  }\n\n  nextAnimationFrame();\n})();\n"]}